
user  www www;

#worker_processes equal to CPU numbers.
worker_processes  4;

error_log  /Data/log/nginx/error.log;


pid        /Data/server/nginx/logs/nginx.pid;

worker_rlimit_nofile 65535;

events {
	use epoll;
    worker_connections  65535;
}


http {
    include       mime.types;
    default_type  application/octet-stream;
	server_tokens off; 

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  60;

    #hide nginx version info and forbid scan the website's index
    server_tokens off;
    autoindex off;
    #redirect the request to nginx when FastCGI make a http response with 4xx or 5xx
    fastcgi_intercept_errors on;

    #config the fastcgi
    fastcgi_connect_timeout 300;    
    fastcgi_send_timeout 300;    
    fastcgi_read_timeout 300;    
    fastcgi_buffer_size 64k;    
    fastcgi_buffers 4 64k;    
    fastcgi_busy_buffers_size 128k;    
    fastcgi_temp_file_write_size 128k;  
    
    #support gzip compress
    gzip on;
    gzip_min_length 1k;
    gzip_buffers 16 64k;
    gzip_http_version 1.1;
    gzip_comp_level 6;
    gzip_types text/plain application/x-javascript text/css application/javascript text/javascript image/jpeg image/gif image/png application/xml application/json;
    gzip_vary on;
    gzip_disable "MSIE [1-6].(?!.*SV1)";
	
    #limit connetions and request speed if you want.
	#
	#limit_conn_zone $binary_remote_addr zone=addr:10m;
	#
	#limit_req_zone $binary_remote_addr zone=one:10m rate=10r/s;	
	#
	
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /Data/log/nginx/access/web.log  main;
	include /Data/server/nginx/conf/vhost/*.conf;
}
